name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Test Before Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-1.21-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-1.21-

    - name: Run release tests
      run: make release-test

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-1.21-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-1.21-

    - name: Download dependencies
      run: make deps

    - name: Build for all platforms
      run: make build-all

    - name: Generate checksums
      run: |
        cd dist
        for file in *; do
          sha256sum "$file" > "$file.sha256"
        done

    - name: Get tag name
      id: tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag.outputs.TAG_NAME }}
        name: Release ${{ steps.tag.outputs.TAG_NAME }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          dist/*
        body: |
          ## What's Changed

          This release includes improvements and bug fixes for icongen.

          ## Installation

          ### Binary Download
          Download the appropriate binary for your platform from the assets below.

          ### npm
          ```bash
          npm install -g @nayuta/icongen
          ```

          ### Manual Installation
          ```bash
          # Linux/macOS
          curl -L https://github.com/nayuta/icongen/releases/download/${{ steps.tag.outputs.TAG_NAME }}/icongen-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m) -o icongen
          chmod +x icongen
          sudo mv icongen /usr/local/bin/

          # Or use the install script
          curl -fsSL https://raw.githubusercontent.com/nayuta/icongen/main/install.sh | bash
          ```

          ## Verification
          All binaries include SHA256 checksums for verification.

  npm-publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        registry-url: 'https://npm.pkg.github.com'

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binary
      run: make build

    - name: Update package.json version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        npm version $VERSION --no-git-tag-version

    - name: Publish to GitHub Packages
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max